% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pareto.R
\name{plot_pareto_double}
\alias{plot_pareto_double}
\title{Pareto Chart for two categorical variables}
\usage{
plot_pareto_double(
  to_plot,
  var1,
  var2,
  step = 1,
  title = "Pareto Chart - Distribution",
  xlab = paste("Number of", quo_name(var2)),
  ylab = paste("Number of", quo_name(var1), "for each number of", quo_name(var2)),
  ylab2 = "\% cumulata",
  hline = 0.8,
  bar.color = "royalblue4",
  bar.fill = "royalblue3",
  bar.alpha = 0.6,
  line.color = "forestgreen",
  line.size = 1,
  hline.col = "coral2"
)
}
\arguments{
\item{to_plot}{tibble of interest.}

\item{var1}{in the example in description correspons to client.}

\item{var2}{in the example in description correspons to article.}

\item{step}{size of histogram bars.}

\item{title}{title of the chart, default: "Pareto Chart".}

\item{xlab}{title of x axis, default: "items".}

\item{ylab}{title of left y axis, default: "".}

\item{ylab2}{title of right y axis, default: "\% cumulate".}

\item{hline}{yintercept of horizontal line, default: 0.8.}

\item{bar.color}{colour of bars, default: "royalblue4".}

\item{bar.fill}{fill of bars, default: "royalblue".}

\item{bar.alpha}{transparency of bars, default: 0.4.}

\item{line.color}{color of cumulate line, default: "green".}

\item{line.size}{soze of cumulate line, default: 1.}

\item{hline.col}{color of horizontal line, default: "orange"}
}
\value{
Returns a Pareto Chart, ggplot2 object
}
\description{
This Pareto Chart comes handy when you're calculating the number of times
each category of a variable corresponds to a certain number of categories of another variable.
For example, You want to know how many clients purchase a certain number of items.
With \code{pareto_chart_double(df, client, article)} you will see bars as high as the number of clients
that purchase a certain number of items. The bars will be located in corrispondence (on the x line) of the number
of items those clients purchase.
}
\examples{
test <- tibble::tibble(clients  = c(rep("John"    , 3),
                                    rep("Jack"    , 3),
                                    rep("Simon"   , 2),
                                    rep("Veronika", 2),
                                    rep("Stephen" , 2),
                                    rep("Angel"   , 1)),
                       articles = letters[1:13])

plot_pareto_double(test, clients, articles)


}
